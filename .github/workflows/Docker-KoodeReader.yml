name: Publish Koodo-Reader Docker image

on:   # 配置触发workflow的事件
  workflow_dispatch:  #只允许手动触发

env:
  APP_NAME: koodo-reader
  DOCKERHUB_REPO: vaccx/koodo-reader

jobs:
  amd64:
    runs-on: ubuntu-latest
    name: Build Koodo-Reader AMD64 image
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate App Version
        run: echo APP_VERSION=$(curl -s https://api.github.com/repos/troyeguo/koodo-reader/releases/latest | jq -r ".tag_name") >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./koodo-reader/Dockerfile
          platforms: linux/amd64
          provenance: false
          sbom: false
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            APP_VERSION=${{ env.APP_VERSION }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest-amd64
            ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}-amd64

  arm64:
    runs-on: self-hosted
    name: Build Koodo-Reader ARM64 image
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate App Version
        run: echo APP_VERSION=$(curl -s https://api.github.com/repos/troyeguo/koodo-reader/releases/latest | jq -r ".tag_name") >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./koodo-reader/Dockerfile
          platforms: linux/arm64
          provenance: false
          sbom: false
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            APP_VERSION=${{ env.APP_VERSION }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest-arm64
            ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}-arm64

  combine-two-images:
    runs-on: ubuntu-latest
    name: Push Koodo-Reader Docker image to Docker Hub
    needs:
      - arm64
      - amd64
    steps:
      - name: Generate App Version
        run: echo APP_VERSION=$(curl -s https://api.github.com/repos/troyeguo/koodo-reader/releases/latest | jq -r ".tag_name") >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Combine two tagged images
        run: |
          docker manifest create ${{ env.DOCKERHUB_REPO }}:latest --amend ${{ env.DOCKERHUB_REPO }}:latest-amd64 --amend ${{ env.DOCKERHUB_REPO }}:latest-arm64
          docker manifest push ${{ env.DOCKERHUB_REPO }}:latest
          docker manifest create ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }} --amend ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}-amd64 --amend ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}-arm64
          docker manifest push ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}